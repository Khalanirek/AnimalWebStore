package com.tur.controllers;

import com.tur.domain.Account;
import com.tur.domain.Animal;
import com.tur.domain.Cart;
import com.tur.domain.CartItem;
import com.tur.repository.AccountRepository;
import com.tur.repository.CartRepository;
import com.tur.services.AccountService;
import com.tur.services.AnimalService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.math.BigDecimal;
import java.util.List;
import java.util.Set;


@Controller
@RequestMapping("/rest")
public class RestController {

    @Autowired
    AnimalService animalService;

    @Autowired
    CartRepository cartRepository;

    @Autowired
    AccountService accountService;
                                                                    //Start of **REST API**
    @RequestMapping(method = RequestMethod.POST)
    public @ResponseBody Long create(@RequestBody Animal animal) {
        return animalService.create(animal);                        //Return autogenerated animalId
    }

    @RequestMapping(value = "/{animalId}", method = RequestMethod.GET)
    public @ResponseBody Animal read(@PathVariable String animalId) {
        return animalService.read(Long.parseLong(animalId));
    }

    @RequestMapping(value = "/{animalId}", method = RequestMethod.PUT)
    public @ResponseBody void update(@RequestBody Animal animal, @PathVariable String animalId) {
        animalService.update(Long.parseLong(animalId), animal);
    }

    @RequestMapping(value = "/{animalId}", method = RequestMethod.DELETE)
    public @ResponseBody void delete(@PathVariable Long animalId) {
        animalService.delete(animalId);
    }
                                                                    //End of **Rest API**

    @RequestMapping(value = "/all", method = RequestMethod.GET)
    public @ResponseBody List<Animal> getAll() {
        return animalService.getAll();
    }

    @RequestMapping(value = "/sA", method = RequestMethod.GET)
    public @ResponseBody List<Animal> getAllSortedAlphabetically() {
        return animalService.getAllSortedAlphabetically();
    }

    @RequestMapping(value = "/sRA", method = RequestMethod.GET)
    public @ResponseBody List<Animal> getAllSortedReverseAlphabetically() {
        return animalService.getAllSortedReverseAlphabetically();
    }

    @RequestMapping(value = "/sPA", method = RequestMethod.GET)
    public @ResponseBody List<Animal> getAllSortedPriceAscending() {
        return animalService.getAllSortedPriceAscending();
    }

    @RequestMapping(value = "/sPD", method = RequestMethod.GET)
    public @ResponseBody List<Animal> getAllSortedPriceDescending() {
        return animalService.getAllSortedPriceDescending();
    }

    @RequestMapping(value = "/aTypes", method = RequestMethod.GET)
    public @ResponseBody Set<String> getAnimalsTypes() {
        return animalService.getAnimalsTypes();
    }

    @RequestMapping(value = "/test", method = RequestMethod.GET)
    public @ResponseBody BigDecimal getCartTest(){
        Cart cart = new Cart(1);
        Animal animal = new Animal();
        animal.setAnimalId(1);
        animal.setCountry("Polska");
        animal.setType("SLon");
        animal.setUnitPrice(1000);
        animal.setSize("Big");
        cartRepository.create(cart);
        cart.addCartItem(new CartItem(animal));
        cart.addCartItem(new CartItem(animal));
        return cartRepository.read(0).getTotalPrice();
    }

    @RequestMapping(value = "/cart", method = RequestMethod.GET)
    public @ResponseBody Cart getCart() {
        //Check if cart exist

        if (cartRepository.read(0) != null){
            return  cartRepository.read(0);
        }
        else {
            cartRepository.create(new Cart(0));
        }
        return cartRepository.read(0);
    }

    @RequestMapping(value = "/cart", method = RequestMethod.POST)
    public @ResponseBody Animal addItemToCart(@RequestBody Animal animal) {
        Cart cart = cartRepository.read(0);
        cart.addCartItem(new CartItem(animal));
        return animal;                        //Return autogenerated animalId
    }

    @RequestMapping(value = "/cart/{index}", method = RequestMethod.DELETE)
    public @ResponseBody Long removeItemFromCart(@PathVariable int index) {
        Cart cart = cartRepository.read(0);
        cart.removeCartItem(index);
        return 200L;
    }

    @RequestMapping(value = "/pay", method = RequestMethod.GET)
    public @ResponseBody Long pay() {
        //Check if cart exist
        cartRepository.clear();
        return 200L;
    }

    @RequestMapping(value = "/account", method = RequestMethod.POST)
    public @ResponseBody Account checkAccount(@RequestBody Account account) {

        return accountService.checkAccount(account);
    }

    @RequestMapping(value = "/createAccount", method = RequestMethod.POST)
    public @ResponseBody Account createAccount(@RequestBody Account account) {

        return accountService.createAccount(account);
    }
}